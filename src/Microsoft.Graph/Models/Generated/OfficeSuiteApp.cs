// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Office Suite App.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class OfficeSuiteApp : MobileApp
    {
    
        /// <summary>
        /// Gets or sets auto accept eula.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "autoAcceptEula", Required = Newtonsoft.Json.Required.Default)]
        public bool? AutoAcceptEula { get; set; }
    
        /// <summary>
        /// Gets or sets product ids.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "productIds", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<OfficeProductId> ProductIds { get; set; }
    
        /// <summary>
        /// Gets or sets excluded apps.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "excludedApps", Required = Newtonsoft.Json.Required.Default)]
        public ExcludedApps ExcludedApps { get; set; }
    
        /// <summary>
        /// Gets or sets use shared computer activation.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "useSharedComputerActivation", Required = Newtonsoft.Json.Required.Default)]
        public bool? UseSharedComputerActivation { get; set; }
    
        /// <summary>
        /// Gets or sets update channel.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "updateChannel", Required = Newtonsoft.Json.Required.Default)]
        public OfficeUpdateChannel? UpdateChannel { get; set; }
    
        /// <summary>
        /// Gets or sets office platform architecture.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "officePlatformArchitecture", Required = Newtonsoft.Json.Required.Default)]
        public WindowsArchitecture? OfficePlatformArchitecture { get; set; }
    
        /// <summary>
        /// Gets or sets locales to install.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "localesToInstall", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<string> LocalesToInstall { get; set; }
    
        /// <summary>
        /// Gets or sets install progress display level.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "installProgressDisplayLevel", Required = Newtonsoft.Json.Required.Default)]
        public OfficeSuiteInstallProgressDisplayLevel? InstallProgressDisplayLevel { get; set; }
    
        /// <summary>
        /// Gets or sets should uninstall older versions of office.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "shouldUninstallOlderVersionsOfOffice", Required = Newtonsoft.Json.Required.Default)]
        public bool? ShouldUninstallOlderVersionsOfOffice { get; set; }
    
    }
}

