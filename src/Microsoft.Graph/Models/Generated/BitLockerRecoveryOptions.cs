// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\ComplexType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type BitLockerRecoveryOptions.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    [JsonConverter(typeof(DerivedTypeConverter))]
    public partial class BitLockerRecoveryOptions
    {
    
        /// <summary>
        /// Gets or sets blockDataRecoveryAgent.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "blockDataRecoveryAgent", Required = Newtonsoft.Json.Required.Default)]
        public bool? BlockDataRecoveryAgent { get; set; }
    
        /// <summary>
        /// Gets or sets recoveryPasswordUsage.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "recoveryPasswordUsage", Required = Newtonsoft.Json.Required.Default)]
        public ConfigurationUsage? RecoveryPasswordUsage { get; set; }
    
        /// <summary>
        /// Gets or sets recoveryKeyUsage.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "recoveryKeyUsage", Required = Newtonsoft.Json.Required.Default)]
        public ConfigurationUsage? RecoveryKeyUsage { get; set; }
    
        /// <summary>
        /// Gets or sets hideRecoveryOptions.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "hideRecoveryOptions", Required = Newtonsoft.Json.Required.Default)]
        public bool? HideRecoveryOptions { get; set; }
    
        /// <summary>
        /// Gets or sets enableRecoveryInformationSaveToStore.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "enableRecoveryInformationSaveToStore", Required = Newtonsoft.Json.Required.Default)]
        public bool? EnableRecoveryInformationSaveToStore { get; set; }
    
        /// <summary>
        /// Gets or sets recoveryInformationToStore.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "recoveryInformationToStore", Required = Newtonsoft.Json.Required.Default)]
        public BitLockerRecoveryInformationType? RecoveryInformationToStore { get; set; }
    
        /// <summary>
        /// Gets or sets enableBitLockerAfterRecoveryInformationToStore.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "enableBitLockerAfterRecoveryInformationToStore", Required = Newtonsoft.Json.Required.Default)]
        public bool? EnableBitLockerAfterRecoveryInformationToStore { get; set; }
    
        /// <summary>
        /// Gets or sets additional data.
        /// </summary>
        [JsonExtensionData(ReadData = true)]
        public IDictionary<string, object> AdditionalData { get; set; }
    
    }
}
