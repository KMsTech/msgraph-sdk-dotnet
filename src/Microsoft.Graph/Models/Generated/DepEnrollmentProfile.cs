// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Dep Enrollment Profile.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class DepEnrollmentProfile : EnrollmentProfile
    {
    
        /// <summary>
        /// Gets or sets supervised mode enabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "supervisedModeEnabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? SupervisedModeEnabled { get; set; }
    
        /// <summary>
        /// Gets or sets support department.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "supportDepartment", Required = Newtonsoft.Json.Required.Default)]
        public string SupportDepartment { get; set; }
    
        /// <summary>
        /// Gets or sets pass code disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "passCodeDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? PassCodeDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets is mandatory.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "isMandatory", Required = Newtonsoft.Json.Required.Default)]
        public bool? IsMandatory { get; set; }
    
        /// <summary>
        /// Gets or sets location disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "locationDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? LocationDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets support phone number.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "supportPhoneNumber", Required = Newtonsoft.Json.Required.Default)]
        public string SupportPhoneNumber { get; set; }
    
        /// <summary>
        /// Gets or sets i tunes pairing mode.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "iTunesPairingMode", Required = Newtonsoft.Json.Required.Default)]
        public ITunesPairingMode? ITunesPairingMode { get; set; }
    
        /// <summary>
        /// Gets or sets profile removal disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "profileRemovalDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? ProfileRemovalDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets management certificates.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "managementCertificates", Required = Newtonsoft.Json.Required.Default)]
        public IEnumerable<ManagementCertificateWithThumbprint> ManagementCertificates { get; set; }
    
        /// <summary>
        /// Gets or sets restore blocked.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "restoreBlocked", Required = Newtonsoft.Json.Required.Default)]
        public bool? RestoreBlocked { get; set; }
    
        /// <summary>
        /// Gets or sets restore from android disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "restoreFromAndroidDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? RestoreFromAndroidDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets apple id disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "appleIdDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? AppleIdDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets terms and conditions disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "termsAndConditionsDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? TermsAndConditionsDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets touch id disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "touchIdDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? TouchIdDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets apple pay disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "applePayDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? ApplePayDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets zoom disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "zoomDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? ZoomDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets siri disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "siriDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? SiriDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets diagnostics disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "diagnosticsDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? DiagnosticsDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets mac osregistration disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "macOSRegistrationDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? MacOSRegistrationDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets mac osfile vault disabled.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "macOSFileVaultDisabled", Required = Newtonsoft.Json.Required.Default)]
        public bool? MacOSFileVaultDisabled { get; set; }
    
        /// <summary>
        /// Gets or sets await device configured confirmation.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "awaitDeviceConfiguredConfirmation", Required = Newtonsoft.Json.Required.Default)]
        public bool? AwaitDeviceConfiguredConfirmation { get; set; }
    
        /// <summary>
        /// Gets or sets shared ipad maximum user count.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "sharedIPadMaximumUserCount", Required = Newtonsoft.Json.Required.Default)]
        public Int32? SharedIPadMaximumUserCount { get; set; }
    
        /// <summary>
        /// Gets or sets enable shared ipad.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "enableSharedIPad", Required = Newtonsoft.Json.Required.Default)]
        public bool? EnableSharedIPad { get; set; }
    
    }
}

