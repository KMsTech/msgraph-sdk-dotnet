// ------------------------------------------------------------------------------
//  Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

// **NOTE** This file was generated by a tool and any changes will be overwritten.

// Template Source: Templates\CSharp\Model\EntityType.cs.tt

namespace Microsoft.Graph
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Runtime.Serialization;
    using Newtonsoft.Json;

    /// <summary>
    /// The type Dep Onboarding Setting.
    /// </summary>
    [JsonObject(MemberSerialization = MemberSerialization.OptIn)]
    public partial class DepOnboardingSetting : Entity
    {
    
        /// <summary>
        /// Gets or sets apple identifier.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "appleIdentifier", Required = Newtonsoft.Json.Required.Default)]
        public string AppleIdentifier { get; set; }
    
        /// <summary>
        /// Gets or sets token expiration date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "tokenExpirationDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? TokenExpirationDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last modified date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastModifiedDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastModifiedDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last successful sync date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastSuccessfulSyncDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastSuccessfulSyncDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets last sync triggered date time.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastSyncTriggeredDateTime", Required = Newtonsoft.Json.Required.Default)]
        public DateTimeOffset? LastSyncTriggeredDateTime { get; set; }
    
        /// <summary>
        /// Gets or sets share token with school data sync service.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "shareTokenWithSchoolDataSyncService", Required = Newtonsoft.Json.Required.Default)]
        public bool? ShareTokenWithSchoolDataSyncService { get; set; }
    
        /// <summary>
        /// Gets or sets last sync error code.
        /// </summary>
        [JsonProperty(NullValueHandling = NullValueHandling.Ignore, PropertyName = "lastSyncErrorCode", Required = Newtonsoft.Json.Required.Default)]
        public Int32? LastSyncErrorCode { get; set; }
    
    }
}

